// Generated by CoffeeScript 1.3.3

window.MainView = Backbone.View.extend({
  el: "#content",
  initialize: function() {
    var _this = this;
    this.template = tpl.get('main');
    if (!this.offset) {
      this.offset = 0;
    }
    this.loading = false;
    $(window).on("resize.main", function(event) {
      if (atBottom(300)) {
        return _this.loadMore();
      }
    });
    return $(window).on("scroll.main", function(event) {
      if (atBottom(300)) {
        return _this.loadMore();
      }
    });
  },
  events: {
    "click #loadMore": "loadMore",
    "click .thumb a": "navigateAnchor"
  },
  render: function() {
    var thumbs,
      _this = this;
    this.updateMeta();
    this.$el.html(Mustache.render(this.template, {
      static_prefix: static_prefix,
      message: []
    }));
    if (this.html) {
      thumbs = $(this.$el.find("#thumbs"));
      thumbs.append(this.html);
      _.each(thumbs.find("a"), function(img) {
        return $(img.firstChild).addClass("fixedWidth").load(function() {
          if ($(this).attr("src") !== '/static/empty.gif') {
            return $(this).removeClass('fixedWidth');
          }
        });
      });
    }
    if (this.scroll) {
      setTimeout("$(window).scrollTop(" + this.scroll + ");", 100);
    }
    this.loadMore();
    return this;
  },
  updateMeta: function() {
    $("title").html("Pony Reaction Pictures - MyLittleFaceWhen");
    $("meta[name=description]").attr("content", "Lots of well-tagged pony reaction images.");
    $("#og-image").attr("content", "http://mylittlefacewhen.com/static/cheerilee-square-300.png");
    $("#cd-layout").remove();
    $("link[rel=image_src]").remove();
    return $("link[rel=canonical]").remove();
  },
  loadMore: function() {
    var collection,
      _this = this;
    if (!this.loading) {
      this.loading = true;
      $("#loader").show();
      collection = new FaceCollection();
      return collection.fetch({
        data: {
          offset: this.offset,
          order_by: "-id",
          accepted: true,
          removed: false
        },
        success: function(data) {
          var imgs;
          collection.each(function(model) {
            return $("#thumbs").append(new Thumbnail({
              model: model
            }).render().el);
          });
          imgs = $('.lazy');
          if ($.browser.webkit) {
            imgs.removeClass('lazy').lazyload({
              effect: "fadeIn"
            });
          } else {
            imgs.removeClass('lazy').lazyload();
          }
          $("#loader").hide();
          _this.collection.add(collection.models);
          _this.offset += 20;
          _this.loading = false;
          if (data.length > 0) {
            if (atBottom(300)) {
              return _this.loadMore();
            }
          } else {
            return $("#loadMore").hide();
          }
        },
        error: function() {
          var loading;
          $("#loader").hide();
          return loading = false;
        }
      });
    }
  },
  beforeClose: function() {
    $(window).off(".main");
    _.each($(".fixedWidth"), function(img) {
      return $(img).removeClass("fixedWidth").attr("src", img.getAttribute("data-original"));
    });
    window.MainView.prototype.html = $("#thumbs").html();
    window.MainView.prototype.offset = this.offset;
    return window.MainView.prototype.scroll = $(window).scrollTop();
  }
});

window.UnreviewedView = Backbone.View.extend({
  el: "#content",
  initialize: function() {
    return this.template = tpl.get('main');
  },
  render: function() {
    var to_template,
      _this = this;
    this.updateMeta();
    to_template = {
      static_prefix: static_prefix,
      message: [
        {
          message: "Unreviewed images"
        }, {
          message: "Uploaded images may take a few seconds to appear here and duplicates may get automatically removed."
        }
      ]
    };
    this.$el.html(Mustache.render(this.template, to_template));
    $("#loader").show();
    $("#loadMore").hide();
    this.collection.fetch({
      data: {
        accepted: false,
        removed: false,
        limit: 1000,
        order_by: "-id"
      },
      success: function(data) {
        var imgs;
        _this.collection.each(function(model) {
          return $("#thumbs").append(new Thumbnail({
            model: model
          }).render().el);
        });
        imgs = $('.lazy');
        if ($.browser.webkit) {
          imgs.removeClass('lazy').lazyload({
            effect: "fadeIn"
          });
        } else {
          imgs.removeClass('lazy').lazyload();
        }
        return $("#loader").hide();
      }
    });
    return this;
  },
  updateMeta: function() {
    $("title").html("Pony Reaction Pictures - MyLittleFaceWhen");
    $("meta[name=description]").attr("content", "Lots of well-tagged pony reaction images.");
    $("#og-image").attr("content", "http://mylittlefacewhen.com/static/cheerilee-square-300.png");
    $("#cd-layout").remove();
    $("link[rel=image_src]").remove();
    return $("link[rel=canonical]").remove();
  }
});

window.Thumbnail = Backbone.View.extend({
  tagName: "span",
  className: "thumb",
  events: {
    "click .thumb a": "navigateAnchor"
  },
  initialize: function() {
    this.template = tpl.get('thumbnail');
    if (this.webp === void 0) {
      return this.detectWebp();
    }
  },
  render: function() {
    var gif, model;
    model = this.model.toJSON();
    model.thumb = this.model.getThumb(this.webp);
    if (model.thumb && model.accepted) {
      model.thumb = app.getImageService() + model.thumb;
    }
    if (model.thumbnails.gif) {
      if (model.accepted) {
        gif = app.getImageService() + model.thumbnails.gif;
      }
      model.gifstring = " onMouseOver='this.src=\"" + gif + "\";' onMouseOut='this.src=\"" + model.thumb + "\";'";
    } else {
      model.gifstring = "";
    }
    this.$el.html(Mustache.render(this.template, {
      model: model
    }));
    $(this.el.firstChild.firstChild).load(function() {
      if ($(this).attr("src") !== ("" + static_prefix + "empty.gif")) {
        return $(this).removeClass('fixedWidth');
      }
    });
    return this;
  },
  detectWebp: function() {
    this.webp = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
    return window.Thumbnail.prototype.webp = this.webp;
  }
});
